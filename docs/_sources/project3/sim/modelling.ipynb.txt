{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b16f6916",
   "metadata": {},
   "source": [
    "\n",
    "## Modelling\n",
    "\n",
    "The simulation involves modeling the dynamics of a Reaction Wheel Inverted Pendulum (RWIP) system. The key components include:\n",
    "\n",
    "***Reaction Wheel Inverted Pendulum Dynamics***\n",
    "\n",
    "<br>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c31a96b4",
   "metadata": {},
   "source": [
    "\n",
    "<img src=\"https://github.com/B-Paweekorn/Reaction-wheel-inverted-pendulum/assets/122732439/6c59b7a7-6aa7-4a73-b353-9e242e6aae1c\" width=\"480\">\n",
    "\n",
    "### Parameters\n",
    "- `L1` - Pendulum length from orgin to center of mass\n",
    "- `L2` - Pendulum length\n",
    "- `m1` - Mass of pendulum\n",
    "- `m2` - Mass of fly wheel\n",
    "- `θp` - Angle of pendulum\n",
    "- `θr` - Angle of fly wheel\n",
    "- `I1` - Innertia moment of pendulum\n",
    "- `I2` - Innertia moment fly wheel and Innertia moment of motor\n",
    "- `g` - Gravitational acceleration\n",
    "- `Tm` - Torque apply by DC motor\n",
    "- `Td` - Disturbance\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7eb2da47",
   "metadata": {},
   "source": [
    "Kinetic Energy\n",
    "\n",
    "&emsp; $K = \\frac{1}{2}(m_{1}L_{1}^{2}+m_{2}L_{2}^{2}+I_{1})\\dot{θ_p}^{2} + \\frac{1}{2}I_{2}(\\dot{θ_p}+\\dot{θ_r})^{2}$\n",
    "\n",
    "&emsp; $K = \\frac{1}{2}(m_{1}L_{1}^{2}+m_{2}L_{2}^{2}+I_{1}+I_{2})\\dot{θ_p}^{2} + I_{2}\\dot{θ_p}\\dot{θ_r} + \\frac{1}{2}I_{2}\\dot{θ_r}^{2}$\n",
    "\n",
    "Potential Energy\n",
    "\n",
    "&emsp; $V = (m_1L + m_2L)g\\cosθ_p$\n",
    "\n",
    "\n",
    "Lagrange Method\n",
    "\n",
    "&emsp; $\\frac{d}{dt} \\left( \\frac{\\partial L}{\\partial \\dot{θ_r}} \\right) - \\frac{\\partial L}{\\partial θ_r} = 0$\n",
    "&emsp;&emsp; and\n",
    "\n",
    "&emsp; $\\frac{d}{dt} \\left( \\frac{\\partial L}{\\partial \\dot{θ_p}} \\right) - \\frac{\\partial L}{\\partial θ_p} = T_m$\n",
    "\n",
    "&emsp; Where Lagrangian (L) is\n",
    "\n",
    "&emsp; $L = K - V$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10bfbe2f",
   "metadata": {},
   "source": [
    "\n",
    "### State space ####\n",
    "  \n",
    "   #### Root Locus Design ####\n",
    "   \n",
    "     To predict the system's characteristics as the gain (Kp) is adjusted and poles move, design the root locus.\n",
    "      \n",
    "     &emsp;&emsp;&emsp; ![image](https://github.com/B-Paweekorn/Reaction-wheel-inverted-pendulum/assets/122732439/76fc37ed-f049-4606-9711-ea4dd4a56246)\n",
    "\n",
    "     Root Locus of the system by default parameter set. It has one zero (s = 0), and three poles (s = -74.93; s =-3.88e-3; s = 73.53).\n",
    "\n",
    "   #### Closed Loop Root Locus ####\n",
    "   \n",
    "   &emsp;&emsp;&emsp; ![image](https://github.com/B-Paweekorn/Reaction-wheel-inverted-pendulum/assets/122732439/31d1765a-d515-48da-8024-f94bcc96d6e3)\n",
    "   \n",
    "   &emsp; Where G(s) is Kp the gain can be adjusted ti make the closed loop poles to be in stable location \n",
    "   \n",
    "   The resultant Root Locus can be seen below \n",
    "   \n",
    "   (note to plot this graph in  `param.py` you need to set ` Stabilize_Controller ` to \"PID\" mode and set ` plot_rootlocus ` to \"True\") \n",
    "   \n",
    "   in this graph you can click pole position you want to know Gain `Kp` to adjust your system characteristics. \n",
    "   \n",
    "   &emsp;&emsp;&emsp;![image](https://github.com/B-Paweekorn/Reaction-wheel-inverted-pendulum/assets/122732439/692a1848-401b-4212-887d-eaeb9cc49548)\n",
    "\n",
    "- **Bang-bang Controller**: \n",
    "The swing up control routine and the stabilizing control routine are switched between -25 to 25 degree\n",
    "\n",
    "&nbsp;&nbsp; <img src=\"https://github.com/B-Paweekorn/Reaction-wheel-inverted-pendulum/assets/122732439/79e6d6d3-9ab2-49eb-a58b-3ad10a96a96b\" width=\"480\">\n",
    "\n",
    "- **Brake Controller**: Used as reduced energy of RWIP when RWIP have too much energy for stabilze\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1cca7a5e",
   "metadata": {},
   "source": []
  }
 ],
 "metadata": {
  "language_info": {
   "name": "python"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
